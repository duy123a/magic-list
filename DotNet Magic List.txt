1. Check .NET SDK

dotnet --info

2. Check list of .NET template

dotnet new list

3. Create new solution

dotnet new sln

dotnew new gitignore

4. Create a new web api project

dotnet new webapi -o src/AuctionService --use-controllers

dotnet new classlib -o src/Common

4.5 Add Common as reference

cd src/AuctionService

dotnet add reference ../../src/Common

5. Add this project to solution (remember still cd at the folder which contains the sln file)

dotnet sln add src/AuctionService

6. Add dotnet tool ef (for migration)

dotnet tool install dotnet-ef -g

7. Check dotnet tools

dotnet tool list -g

8. Add dotnet tool to PATH

Open .zshrc

Add

export PATH="$PATH:$HOME/.dotnet/tools/"

9. Create a first migration

dotnet ef migrations add "InitialCreate" -o Data/Migrations

10. Create a docker compose

Should similar to it

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgressql/data
volumes:
  pgdata:

Then at the solution folder, run the docker compose

docker compose up -d

If you want to stop

docker compose down

11. Add data from migration to database

dotnet ef database update

Option

Backup postgres sql

docker exec -t your-db-container pg_dumpall -c -U your-db-user > dump_$(date +%Y-%m-%d_%H_%M_%S).sql

or 

docker exec -t your-db-container pg_dumpall -c -U your-db-user | gzip > ./dump_$(date +"%Y-%m-%d_%H_%M_%S").gz

Restore

cat your_dump.sql | docker exec -i your-db-container psql -U your-db-user -d your-db-name

gunzip < your_dump.sql.gz | docker exec -i your-db-container psql -U your-db-user -d your-db-name


12. To remove migration, you need to update to the previous migration

dotnet ef database update <previous-migration-name>

If it is your first one, use this one to unapply all migrations

dotnet ef database update 0

Remove last migration

dotnet ef migrations remove


13. How to test when your production get bug

dotnet publish -c Release -o ./publish
cd publish
dotnet YourApp.dll


--------------------------------------
MongoDB

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgressql/data
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data
volumes:
  pgdata:
  mongodata:


Connection string to connect:
Inside WSL: mongodb://root:mongopw@localhost
Outside WSL: mongodb://root:mongopw@172.24.17.122:27017
